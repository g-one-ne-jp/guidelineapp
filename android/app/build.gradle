plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.guideline.dev" // アプリケーションIDを設定
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.guideline.dev" // アプリケーションIDを設定
        minSdkVersion 23 
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        manifestPlaceholders += [pdftronLicenseKey:PDFTRON_LICENSE_KEY] // PDFtronライセンスキーを設定
    }

    signingConfigs {
        release {
            // リリース用の署名設定を追加
            storeFile file("your_release_keystore.jks") // キーストアファイルへのパス
            storePassword "your_keystore_password" // キーストアのパスワード
            keyAlias "your_key_alias" // キーエイリアス
            keyPassword "your_key_password" // キーのパスワード
        }
    }

    buildTypes {
        release {
            // リリースビルド用の署名設定を使用
            signingConfig signingConfigs.release 
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // 必要な外部ライブラリを追加
}